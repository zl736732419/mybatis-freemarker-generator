######################################################
# 用户定制的参数
######################################################
# 实体包，程序将会在该指定包的上层包${package}(由运行时添加的变量)中生成对应的子包：
#   1. service业务接口包：${package}.service
#   2. service业务接口实现包: ${package}.service.impl
#   3. dao数据接口包: ${package}.dao
# 可以设置多个值，通过逗号分隔，同时也可以指定通配符*
# *: 代表一个目录
# **: 代表其下所有子目录
#domain.package=com.zheng.*.domain
#domain.package=com.**.domain
domain.package=com.zheng.example.domain

# 设置数据库字段的命名形式
# 这里提供了两种：
#   1. 驼峰(camel)
#   2. 下划线(underscore)
db.column.style=underscore

# 设置数据库表前缀，数据库表名称=${db.table.prefix}_${underscore_entity_class}
# 比如：tb_user
db.table.prefix=tb

# 考虑到实际生产开发中，每个实体都应该设置三个基本属性，所以在这里也就限制了实体必须拥有这三个字段
# 他们分别是: 创建时间(createTime),更新时间(updateTime),是否删除(isDelete)
# 所以这里指定每个实体中对应这三个属性的名称
# 代表记录创建时间
domain.attr.createTime=createTime
# 代表记录更新时间
domain.attr.updateTime=updateTime
# 代表记录是否删除，通常使用整型，0:未删除 1:已删除
domain.attr.isDelete=isDelete


# 程序软件开发人员昵称
author=zhenglian

# mybatis mapper接口的配置方式：
# 1. spring boot形式(mapper)，需要添加@Mapper
# 2. spring mvc形式(repository)，需要添加@Repository
# 默认为spring mvc形式  
mapper.annotation.style=mapper
